{"version":3,"file":"index.js","sources":["../src/trim/core.ts","../src/trim/exec.ts","../src/utils.ts","../src/vals.ts","../src/sha256.ts","../src/minisign.ts","../src/dl/dl-qstract.ts","../src/dl/dl-rsign2.ts","../src/main.ts","../src/index.ts"],"sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright 2019 GitHub\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport crypto from 'node:crypto'\nimport fs from 'node:fs'\nimport os from 'node:os'\nimport path from 'node:path'\nimport process from 'node:process'\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-shadow */\n/* eslint-disable no-prototype-builtins */\n\n/**\n * Optional properties that can be sent with annotation commands (notice, error, and warning)\n * See: https://docs.github.com/en/rest/reference/checks#create-a-check-run for more information about annotations.\n */\nexport interface AnnotationProperties {\n  /**\n   * A title for the annotation.\n   */\n  title?: string\n\n  /**\n   * The path of the file for which the annotation should be created.\n   */\n  file?: string\n\n  /**\n   * The start line for the annotation.\n   */\n  startLine?: number\n\n  /**\n   * The end line for the annotation. Defaults to `startLine` when `startLine` is provided.\n   */\n  endLine?: number\n\n  /**\n   * The start column for the annotation. Cannot be sent when `startLine` and `endLine` are different values.\n   */\n  startColumn?: number\n\n  /**\n   * The end column for the annotation. Cannot be sent when `startLine` and `endLine` are different values.\n   * Defaults to `startColumn` when `startColumn` is provided.\n   */\n  endColumn?: number\n}\n\n/**\n * Interface for getInput options\n */\nexport interface InputOptions {\n  /** Optional. Whether the input is required. If required and not present, will throw. Defaults to false */\n  required?: boolean\n\n  /** Optional. Whether leading/trailing whitespace will be trimmed for the input. Defaults to true */\n  trimWhitespace?: boolean\n}\n\n/**\n * The code to exit an action\n */\nenum ExitCode {\n  /**\n   * A code indicating that the action was successful\n   */\n  Success = 0,\n\n  /**\n   * A code indicating that the action was a failure\n   */\n  Failure = 1\n}\n\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nexport function getInput(name: string, options?: InputOptions): string {\n  const val: string =\n    process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || ''\n  if (options && options.required && !val) {\n    throw new Error(`Input required and not supplied: ${name}`)\n  }\n\n  if (options && options.trimWhitespace === false) {\n    return val\n  }\n\n  return val.trim()\n}\n\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setOutput(name: string, value: any): void {\n  const filePath = process.env['GITHUB_OUTPUT'] || ''\n  if (filePath) {\n    return issueFileCommand('OUTPUT', prepareKeyValueMessage(name, value))\n  }\n\n  process.stdout.write(os.EOL)\n  issueCommand('set-output', { name }, toCommandValue(value))\n}\n\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nexport function info(message: string): void {\n  process.stdout.write(message + os.EOL)\n}\n\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nexport function warning(\n  message: string | Error,\n  properties: AnnotationProperties = {}\n): void {\n  issueCommand(\n    'warning',\n    toCommandProperties(properties),\n    message instanceof Error ? message.toString() : message\n  )\n}\n\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nexport function error(\n  message: string | Error,\n  properties: AnnotationProperties = {}\n): void {\n  issueCommand(\n    'error',\n    toCommandProperties(properties),\n    message instanceof Error ? message.toString() : message\n  )\n}\n\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nexport function debug(message: string): void {\n  issueCommand('debug', {}, message)\n}\n\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nexport function setFailed(message: string | Error): void {\n  process.exitCode = ExitCode.Failure\n\n  error(message)\n}\n\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nexport function addPath(inputPath: string): void {\n  const filePath = process.env['GITHUB_PATH'] || ''\n  if (filePath) {\n    issueFileCommand('PATH', inputPath)\n  } else {\n    issueCommand('add-path', {}, inputPath)\n  }\n  process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`\n}\n\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(\n  annotationProperties: AnnotationProperties\n): CommandProperties {\n  if (!Object.keys(annotationProperties).length) {\n    return {}\n  }\n\n  return {\n    title: annotationProperties.title,\n    file: annotationProperties.file,\n    line: annotationProperties.startLine,\n    endLine: annotationProperties.endLine,\n    col: annotationProperties.startColumn,\n    endColumn: annotationProperties.endColumn\n  }\n}\n\nfunction issueFileCommand(command: string, message: any): void {\n  const filePath = process.env[`GITHUB_${command}`]\n  if (!filePath) {\n    throw new Error(\n      `Unable to find environment variable for file command ${command}`\n    )\n  }\n  if (!fs.existsSync(filePath)) {\n    throw new Error(`Missing file at path: ${filePath}`)\n  }\n\n  fs.appendFileSync(filePath, `${toCommandValue(message)}${os.EOL}`, {\n    encoding: 'utf8'\n  })\n}\n\nfunction prepareKeyValueMessage(key: string, value: any): string {\n  const delimiter = `ghadelimiter_${crypto.randomUUID()}`\n  const convertedValue = toCommandValue(value)\n\n  // These should realistically never happen, but just in case someone finds a\n  // way to exploit uuid generation let's not allow keys or values that contain\n  // the delimiter.\n  if (key.includes(delimiter)) {\n    throw new Error(\n      `Unexpected input: name should not contain the delimiter \"${delimiter}\"`\n    )\n  }\n\n  if (convertedValue.includes(delimiter)) {\n    throw new Error(\n      `Unexpected input: value should not contain the delimiter \"${delimiter}\"`\n    )\n  }\n\n  return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`\n}\n\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input: any): string {\n  if (input === null || input === undefined) {\n    return ''\n  } else if (typeof input === 'string' || input instanceof String) {\n    return input as string\n  }\n  return JSON.stringify(input)\n}\n\ninterface CommandProperties {\n  [key: string]: any\n}\n\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(\n  command: string,\n  properties: CommandProperties,\n  message: any\n): void {\n  const cmd = new Command(command, properties, message)\n  process.stdout.write(cmd.toString() + os.EOL)\n}\n\nconst CMD_STRING = '::'\n\nclass Command {\n  private readonly command: string\n  private readonly message: string\n  private readonly properties: CommandProperties\n\n  constructor(command: string, properties: CommandProperties, message: string) {\n    if (!command) {\n      command = 'missing.command'\n    }\n\n    this.command = command\n    this.properties = properties\n    this.message = message\n  }\n\n  toString(): string {\n    let cmdStr = CMD_STRING + this.command\n\n    if (this.properties && Object.keys(this.properties).length > 0) {\n      cmdStr += ' '\n      let first = true\n      for (const key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          const val = this.properties[key]\n          if (val) {\n            if (first) {\n              first = false\n            } else {\n              cmdStr += ','\n            }\n\n            cmdStr += `${key}=${escapeProperty(val)}`\n          }\n        }\n      }\n    }\n\n    cmdStr += `${CMD_STRING}${escapeData(this.message)}`\n    return cmdStr\n  }\n}\n\nfunction escapeData(s: any): string {\n  return toCommandValue(s)\n    .replace(/%/g, '%25')\n    .replace(/\\r/g, '%0D')\n    .replace(/\\n/g, '%0A')\n}\n\nfunction escapeProperty(s: any): string {\n  return toCommandValue(s)\n    .replace(/%/g, '%25')\n    .replace(/\\r/g, '%0D')\n    .replace(/\\n/g, '%0A')\n    .replace(/:/g, '%3A')\n    .replace(/,/g, '%2C')\n}\n","import { execSync, execFileSync, ExecFileSyncOptions } from 'node:child_process'\n\nexport function execFile(\n  file: string,\n  args?: string[],\n  options?: ExecFileSyncOptions\n): string {\n  if (!options) options = { encoding: 'utf8' }\n  else options.encoding = 'utf8'\n\n  return execFileSync(file, args, options) as string\n}\n\nexport function execGetOutput(command: string): string {\n  return execSync(command, {\n    encoding: 'utf8'\n  })\n}\n","import { arch, platform } from 'node:process'\nimport fs from 'node:fs'\nimport { finished } from 'node:stream/promises'\nimport { Readable } from 'node:stream'\nimport * as core from './trim/core.js'\nimport * as exec from './trim/exec.js'\n\nexport function getVersions(): string[] {\n  const output = exec.execGetOutput(\n    'git ls-remote --tags --refs https://github.com/cargo-prebuilt/cargo-prebuilt.git'\n  )\n\n  const re = /v((\\d+)\\.(\\d+)\\.(\\d+))[^-]/g\n  const tmp = [...output.matchAll(re)].map((a) => {\n    return a[1]\n  })\n\n  return tmp.sort((a, b) => {\n    if (a === b) return 0\n    const as = a.split('.')\n    const bs = b.split('.')\n    if (\n      as[0] > bs[0] ||\n      (as[0] === bs[0] && as[1] > bs[1]) ||\n      (as[0] === bs[0] && as[1] === bs[1] && as[2] > bs[2])\n    )\n      return 1\n    return -1\n  })\n}\n\nexport function currentTarget(): string {\n  switch (arch) {\n    case 'arm':\n      if (platform === 'linux') return 'armv7-unknown-linux-gnueabihf'\n      else core.setFailed('unsupported platform')\n      break\n    case 'arm64':\n      if (platform === 'linux') return 'aarch64-unknown-linux-gnu'\n      else if (platform === 'darwin') return 'aarch64-apple-darwin'\n      else core.setFailed('unsupported platform')\n      break\n    case 'riscv64':\n      if (platform === 'linux') return 'riscv64gc-unknown-linux-gnu'\n      else core.setFailed('unsupported platform')\n      break\n    case 's390x':\n      if (platform === 'linux') return 's390x-unknown-linux-gnu'\n      else core.setFailed('unsupported platform')\n      break\n    case 'x64':\n      if (platform === 'linux') return 'x86_64-unknown-linux-gnu'\n      else if (platform === 'darwin') return 'x86_64-apple-darwin'\n      else if (platform === 'win32') return 'x86_64-pc-windows-msvc'\n      else if (platform === 'freebsd') return 'x86_64-unknown-freebsd'\n      else core.setFailed('unsupported platform')\n      break\n  }\n\n  core.setFailed('unsupported or missing platform')\n  return 'NULL'\n}\n\nexport async function downloadFile(url: string, path: string): Promise<void> {\n  if (!(await downloadFileWithErr(url, path)))\n    core.setFailed(`Could not download ${url}`)\n}\n\nexport async function downloadFileWithErr(\n  url: string,\n  path: string\n): Promise<boolean> {\n  core.debug(`Started download of ${url} to ${path}`)\n  const res = await fetch(url)\n  if (res.status === 200) {\n    const stream = fs.createWriteStream(path, { flags: 'w' })\n    // @ts-expect-error body stream should not be null\n    await finished(Readable.fromWeb(res.body).pipe(stream))\n    core.debug(`Finished download of ${url} to ${path}`)\n    return true\n  }\n\n  core.debug(`Could not download ${url}`)\n  return false\n}\n","import fs from 'node:fs'\nimport path from 'node:path'\nimport os from 'node:os'\n\nexport const DL_URL =\n  'https://github.com/cargo-prebuilt/cargo-prebuilt/releases/download/v'\nexport const PREBUILT_INDEX_PUB_KEY =\n  'RWTSqAR1Hbfu6mBFiaz4hb9I9gikhMmvKkVbyz4SJF/oxJcbbScmCqqO'\nexport const INSTALL_DIR = path.join(os.homedir(), '.cargo/bin')\nexport const TMP_DIR = fs.mkdtempSync(path.join(os.tmpdir(), 'cargo-prebuilt-'))\n","import { readFileSync } from 'node:fs'\nimport { createHash } from 'node:crypto'\nimport { DL_URL } from './vals.js'\n\nexport async function verifyFileHash(\n  version: string,\n  filePath: string\n): Promise<void> {\n  const res = await fetch(`${DL_URL}${version}/hashes.sha256`)\n  const sha256File = (await res.text()).trim()\n\n  const fileHash = await hashFile(filePath)\n\n  // This is probably fine, but maybe this should be change later\n  if (!sha256File.includes(fileHash))\n    throw new Error('sha256 hash does not match')\n}\n\n// TODO: Use sha256 from qstract?\nexport async function hashFile(filePath: string): Promise<string> {\n  return new Promise((resolve) => {\n    const fd = readFileSync(filePath)\n    const hash = createHash('sha256').update(fd).digest('hex')\n    resolve(hash)\n  })\n}\n","import path from 'node:path'\nimport * as exec from './trim/exec.js'\nimport { DL_URL, PREBUILT_INDEX_PUB_KEY } from './vals.js'\nimport { downloadFile } from './utils.js'\n\nexport async function verifyFileMinisign(\n  version: string,\n  fileName: string,\n  filePath: string,\n  rsign2: string\n): Promise<void> {\n  const archivePath = path.dirname(filePath)\n  const minisignFilePath = `${archivePath}/${fileName}.minisig`\n\n  await downloadFile(\n    `${DL_URL}${version}/${fileName}.minisig`,\n    minisignFilePath\n  )\n\n  exec.execFile(rsign2, [\n    'verify',\n    `${filePath}`,\n    '-P',\n    `${PREBUILT_INDEX_PUB_KEY}`,\n    '-x',\n    `${minisignFilePath}`\n  ])\n}\n","import { arch, platform } from 'node:process'\nimport * as core from '../trim/core.js'\nimport * as exec from '../trim/exec.js'\nimport { TMP_DIR } from '../vals.js'\nimport { hashFile } from '../sha256.js'\nimport { downloadFile } from '../utils.js'\n\nconst QSTRACT_DL_URL =\n  'https://github.com/cargo-prebuilt/qstract/releases/download/v0.2.8/'\n\nexport async function installQstract(): Promise<string> {\n  let dlFile\n  let dlHash\n\n  core.info(`Installing qstract to ${TMP_DIR}`)\n\n  switch (arch) {\n    case 'arm':\n      if (platform === 'linux') {\n        dlFile = 'armv7-unknown-linux-musleabihf'\n        dlHash =\n          '8696095e880152242ce14aefc1ce1b4b67a11cc75e062dacc8596b7465eaf0a1'\n      } else core.setFailed('unsupported platform')\n      break\n    case 'arm64':\n      if (platform === 'linux') {\n        dlFile = 'aarch64-unknown-linux-musl'\n        dlHash =\n          'd3870a102fbe50301d7fdf685ceb8e7b679c3b1afc92653bedb9137389e354c1'\n      } else if (platform === 'darwin') {\n        dlFile = 'aarch64-apple-darwin'\n        dlHash =\n          '8ce9e27d38da5ec3797f48708e2fc99982302f6c3ff52b3b0818287914365a50'\n      } else if (platform === 'win32') {\n        dlFile = 'aarch64-pc-windows-msvc.exe'\n        dlHash =\n          '07bd05f3c70296f3076bc34dbb4d1da1a35ee1253a299525baab8eefe9a20e66'\n      } else core.setFailed('unsupported platform')\n      break\n    case 'x64':\n      if (platform === 'linux') {\n        dlFile = 'x86_64-unknown-linux-musl'\n        dlHash =\n          '315cc94e280473ef849146dd15d9459be078a59d3612e52a4015d97f64b52eac'\n      } else if (platform === 'darwin') {\n        dlFile = 'x86_64-apple-darwin'\n        dlHash =\n          'b190c6ed4b88e0f6bcd9d274389c120d80a85b70660584595af572b106623c42'\n      } else if (platform === 'win32') {\n        dlFile = 'x86_64-pc-windows-msvc.exe'\n        dlHash =\n          'fe98cadc7f185eb8fb9bf651e9423b74eddf6cf6c8beb0085de4ca25b2c42b27'\n      } else if (platform === 'freebsd') {\n        dlFile = 'x86_64-unknown-freebsd'\n        dlHash =\n          '348b108302d24d79677186a34c363997b49b957e4a88e5da34c8699b44fe8d20'\n      } else core.setFailed('unsupported platform')\n      break\n    case 'riscv64':\n      if (platform === 'linux') {\n        dlFile = 'riscv64gc-unknown-linux-musl'\n        dlHash =\n          'aa9a71164a2c6c12e7876b2fab4b9d00912981866dd2097243724c2c97779b9c'\n      } else core.setFailed('unsupported platform')\n      break\n    case 's390x':\n      if (platform === 'linux') {\n        dlFile = 's390x-unknown-linux-gnu'\n        dlHash =\n          '2d94c0de4a89fbe18cd531bbd95de7ec89f086edbd2fc81f2ccbfa58df5439ca'\n      } else core.setFailed('unsupported platform')\n      break\n  }\n\n  if (!dlFile) core.setFailed('unsupported or missing platform (qstract)')\n\n  let binPath = `${TMP_DIR}/qstract`\n  if (platform === 'win32') binPath += '.exe'\n\n  core.debug(\n    `qstract: \\n    dlFile ${dlFile}\\n    dlHash ${dlHash}\\n    binPath ${binPath}`\n  )\n\n  await downloadFile(`${QSTRACT_DL_URL}qstract-${dlFile}`, binPath)\n\n  // Check hash\n  const hash = await hashFile(binPath)\n  if (hash !== dlHash) core.setFailed('sha256 hash does not match for qstract')\n  core.debug('Hash matched for qstract')\n\n  if (!binPath.endsWith('.exe')) {\n    exec.execGetOutput(`chmod +x ${binPath}`)\n    core.debug('Detected unix, trying to set exe bit with chmod')\n  }\n\n  // Test run\n  exec.execFile(binPath, ['--version'])\n\n  core.info('Installed qstract')\n\n  return binPath\n}\n","import { arch, platform } from 'node:process'\nimport * as core from '../trim/core.js'\nimport * as exec from '../trim/exec.js'\nimport { TMP_DIR } from '../vals.js'\nimport { hashFile } from '../sha256.js'\nimport { downloadFile } from '../utils.js'\n\nconst RSIGN_DL_URL =\n  'https://github.com/cargo-prebuilt/index/releases/download/rsign2-0.6.4/'\n\nexport async function installRsign2(qstract: string): Promise<string> {\n  let dlFile\n  let dlHash\n\n  core.info(`Installing rsign2 to ${TMP_DIR}`)\n\n  switch (arch) {\n    case 'arm':\n      if (platform === 'linux') {\n        dlFile = 'armv7-unknown-linux-musleabihf'\n        dlHash =\n          '77e5bd64bd2d60c0127adeeb0e2a8dd5a69fd9f6c61ec53706774c7df3d04b6f'\n      } else core.setFailed('unsupported platform')\n      break\n    case 'arm64':\n      if (platform === 'linux') {\n        dlFile = 'aarch64-unknown-linux-musl'\n        dlHash =\n          '5be366398760c0a908f197581c3c1b378e08b2dfc40d86acafa60cc5218ea52c'\n      } else if (platform === 'darwin') {\n        dlFile = 'aarch64-apple-darwin'\n        dlHash =\n          '946a35aa2bcff08b1e14b9834224d947e4719ffaf09a87c548b479f002a01454'\n      } else if (platform === 'win32') {\n        dlFile = 'aarch64-pc-windows-msvc'\n        dlHash =\n          '05acb9a14e6c81cc7ff4d82d4cd2213c1424a2a7f41479c13080725f52e9d4c7'\n      } else core.setFailed('unsupported platform')\n      break\n    case 'x64':\n      if (platform === 'linux') {\n        dlFile = 'x86_64-unknown-linux-musl'\n        dlHash =\n          '5c7c17e5f65d740e80fd3bf187701a90dbde1829521c77aaca30c06c24fbca92'\n      } else if (platform === 'darwin') {\n        dlFile = 'x86_64-apple-darwin'\n        dlHash =\n          'ac85d87369576b5be0d381bb47c702028e1750dfaa1d81c698743a98ebdfb72a'\n      } else if (platform === 'win32') {\n        dlFile = 'x86_64-pc-windows-msvc'\n        dlHash =\n          'b39ab2cc69476b3cb7a4ce22f2f2aaf3ae2f3dae343a7396d0f73ab27ab9c76d'\n      } else if (platform === 'freebsd') {\n        dlFile = 'x86_64-unknown-freebsd'\n        dlHash =\n          '26dec3708735ff35c0b5a295a75893f0238a531d34f483ba279ca26f43496c72'\n      } else core.setFailed('unsupported platform')\n      break\n    case 'riscv64':\n      if (platform === 'linux') {\n        dlFile = 'riscv64gc-unknown-linux-gnu' // TODO: Musl version?\n        dlHash =\n          '2139d29cdf23d0be3c6cbce00acfc0d27cf5bf0ee2780ec0b8a7fd2961f7f146'\n      } else core.setFailed('unsupported platform')\n      break\n    case 's390x':\n      if (platform === 'linux') {\n        dlFile = 's390x-unknown-linux-gnu'\n        dlHash =\n          '548ba02e63894975488388dc0edc057a0dea8177d2f7852a4ae92205b7341b0b'\n      } else core.setFailed('unsupported platform')\n      break\n  }\n\n  if (!dlFile) core.setFailed('unsupported or missing platform (rsign2)')\n\n  const tarPath = `${TMP_DIR}/rsign.tar.gz`\n\n  core.debug(\n    `rsign2: \\n    dlFile ${dlFile}\\n    dlHash ${dlHash}\\n    binPath ${tarPath}`\n  )\n\n  await downloadFile(`${RSIGN_DL_URL}${dlFile}.tar.gz`, tarPath)\n\n  // Check tar hash\n  const hash = await hashFile(tarPath)\n  if (hash !== dlHash) core.setFailed('sha256 hash does not match for rsign2')\n  core.debug('Hash matched for rsign')\n\n  // Extract\n  core.debug('Extracting rsign')\n  exec.execFile(qstract, ['-z', '-C', `${TMP_DIR}`, tarPath])\n\n  let toolPath\n  if (platform === 'win32') toolPath = `${TMP_DIR}/rsign.exe`\n  else toolPath = `${TMP_DIR}/rsign`\n\n  core.debug(`Tool path rsign ${toolPath}`)\n\n  // Check if rsign works\n  exec.execFile(toolPath, ['--version'])\n\n  core.info('Installed rsign2')\n\n  return toolPath\n}\n","import fs from 'node:fs'\nimport { sep } from 'node:path'\nimport * as core from './trim/core.js'\nimport * as exec from './trim/exec.js'\nimport { currentTarget, downloadFileWithErr, getVersions } from './utils.js'\nimport { DL_URL, INSTALL_DIR, TMP_DIR } from './vals.js'\nimport { verifyFileHash } from './sha256.js'\nimport { verifyFileMinisign } from './minisign.js'\nimport { installQstract } from './dl/dl-qstract.js'\nimport { installRsign2 } from './dl/dl-rsign2.js'\n\n// TODO: Retry option that runs cargo-prebuilt again if it fails?\nexport async function run(): Promise<void> {\n  try {\n    let prebuiltVersion: string = core.getInput('prebuilt-version')\n    let fallbackVersion: string | undefined\n    let prebuiltTarget: string = core.getInput('prebuilt-target')\n    const prebuiltVerify: string = core.getInput('prebuilt-verify')\n\n    const pkgs: string = core.getInput('pkgs')\n\n    const target: string = core.getInput('target')\n    const safe: string = core.getInput('safe')\n    const update: string = core.getInput('update')\n    const index: string = core.getInput('index')\n    const pubKey: string = core.getInput('pub-key')\n    const auth: string = core.getInput('auth')\n    const indexKey: string = core.getInput('index-key')\n    const ci: string = core.getInput('ci')\n    const noSig: string = core.getInput('no-sig')\n    const noHash: string = core.getInput('no-hash')\n    const hashBins: string = core.getInput('hash-bins')\n    const path: string = core.getInput('path')\n    const reportPath: string = core.getInput('report-path')\n    const noCreatePath: string = core.getInput('no-create-path')\n    const reports: string = core.getInput('reports')\n    const config: string = core.getInput('config')\n    const requireConfig: string = core.getInput('require-config')\n    const out: string = core.getInput('out')\n    const getLatest: string = core.getInput('get-latest')\n    const color: string = core.getInput('color')\n\n    if (prebuiltVersion === 'latest') {\n      const latest = getVersions()\n      prebuiltVersion = latest[latest.length - 1]\n      fallbackVersion = latest[latest.length - 2]\n      core.info(\n        `Picked cargo-prebuilt version ${prebuiltVersion} with fallback version ${fallbackVersion}`\n      )\n    }\n    if (prebuiltTarget === 'current') {\n      prebuiltTarget = currentTarget()\n    }\n\n    core.setOutput('prebuilt-version', prebuiltVersion)\n    core.setOutput('prebuilt-target', prebuiltTarget)\n\n    // Install qstract\n    const qstract = await installQstract()\n\n    // Install rsign2\n    let rsignLet = ''\n    if (prebuiltVerify === 'minisign') {\n      core.debug('Verify method is minisign, downloading rsign2')\n      rsignLet = await installRsign2(qstract)\n    }\n    const rsign = rsignLet\n\n    // Install cargo-prebuilt\n    const fileEnding: string = prebuiltTarget.includes('windows-msvc')\n      ? '.zip'\n      : '.tar.gz'\n\n    // Download\n    const prebuiltPath = `${TMP_DIR}/${prebuiltTarget}${fileEnding}`\n    const dl1 = await downloadFileWithErr(\n      `${DL_URL}${prebuiltVersion}/${prebuiltTarget}${fileEnding}`,\n      prebuiltPath\n    )\n    if (!dl1) {\n      core.warning('Failed to install latest version using fallback version')\n      if (fallbackVersion) prebuiltVersion = fallbackVersion\n      const dl2 = await downloadFileWithErr(\n        `${DL_URL}${prebuiltVersion}/${prebuiltTarget}${fileEnding}`,\n        prebuiltPath\n      )\n      if (!dl2) core.setFailed('Could not install cargo-prebuilt from fallback')\n    }\n\n    // Verify\n    if (prebuiltVerify === 'sha256') {\n      await verifyFileHash(prebuiltVersion, prebuiltPath)\n      core.info('Verified downloaded archive with sha256 hash')\n    } else if (prebuiltVerify === 'minisign') {\n      await verifyFileMinisign(\n        prebuiltVersion,\n        `${prebuiltTarget}${fileEnding}`,\n        prebuiltPath,\n        rsign\n      )\n      core.info('Verified downloaded archive with minisign')\n    }\n    // eslint-disable-next-line no-empty\n    else if (prebuiltVerify === 'none') {\n    } else core.setFailed('invalid prebuilt-verify type')\n\n    // Extract\n    core.debug(`Extracting ${prebuiltPath}`)\n    if (prebuiltTarget.includes('windows-msvc'))\n      exec.execFile(qstract, ['--zip', '-C', TMP_DIR, prebuiltPath])\n    else exec.execFile(qstract, ['-z', '-C', TMP_DIR, prebuiltPath])\n\n    let tmpBin = `${TMP_DIR}${sep}cargo-prebuilt`\n    let finalBin = `${INSTALL_DIR}${sep}cargo-prebuilt`\n    if (prebuiltTarget.includes('windows-msvc')) {\n      tmpBin += '.exe'\n      finalBin += '.exe'\n    }\n    exec.execGetOutput(`mv ${tmpBin} ${finalBin}`)\n\n    core.addPath(INSTALL_DIR)\n    core.info(`Installed cargo-prebuilt@${prebuiltVersion} at ${finalBin}`)\n    core.setOutput('prebuilt-binary', finalBin)\n\n    // Install prebuilt crates if needed\n    if (pkgs !== '') {\n      const args: string[] = []\n\n      if (safe === 'true') args.push('--safe')\n      if (update === 'true') args.push('--update')\n      if (ci === 'true') args.push('--ci')\n      if (noSig === 'true') args.push('--no-sig')\n      if (noHash === 'true') args.push('--no-hash')\n      if (hashBins === 'true') args.push('--hash-bins')\n      if (noCreatePath === 'true') args.push('--no-create-path')\n      if (requireConfig === 'true') args.push('--require-config')\n      if (out === 'true') args.push('--out')\n      if (getLatest === 'true') args.push('--get-latest')\n\n      if (color === 'true') args.push('--color')\n      if (color === 'false') args.push('--no-color')\n\n      if (target !== '') {\n        args.push('--target')\n        args.push(target)\n      }\n      if (index !== '') {\n        args.push('--index')\n        args.push(index)\n      }\n      if (pubKey !== '') {\n        args.push('--pub-key')\n        args.push(pubKey)\n      }\n      if (auth !== '') {\n        args.push('--auth')\n        args.push(auth)\n      }\n      if (indexKey !== '') {\n        args.push('--index-key')\n        args.push(indexKey)\n      }\n      if (path !== '') {\n        args.push('--path')\n        args.push(path)\n      }\n      if (reportPath !== '') {\n        args.push('--reportPath')\n        args.push(reportPath)\n      }\n      if (reports !== '') {\n        args.push('--reports')\n        args.push(reports)\n      }\n      if (config !== '') {\n        args.push('--config')\n        args.push(config)\n      }\n\n      args.push(pkgs)\n\n      const output = exec.execFile(finalBin, args)\n      core.setOutput('out', output)\n\n      if (path !== '') core.addPath(path)\n      core.info(`Installed tools ${pkgs}`)\n    }\n\n    core.debug(`Cleaning up tmp dir ${TMP_DIR}`)\n    fs.rm(TMP_DIR, { recursive: true, force: true }, (err) => {\n      if (err) core.error(err.message)\n    })\n\n    process.exit(0)\n  } catch (error) {\n    if (error instanceof Error) core.setFailed(error.message)\n  }\n}\n","import { run } from './main.js'\n\nrun()\n"],"names":["process","exec.execGetOutput","core.setFailed","core.debug","exec.execFile","core.info","core.getInput","core.setOutput","core.warning","core.addPath","core.error"],"mappings":"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"}