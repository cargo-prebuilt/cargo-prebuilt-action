name: 'build-test'

on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

permissions:
  contents: read

env:
  PNPM_VERSION: latest

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - run: |
          pnpm run all

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-13
          - os: macos-14
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./
      - run: cargo prebuilt just
      - run: just --version
  test-version: # make sure that the right version can be downloaded
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
      - run: "[[ \"$(cargo prebuilt --version)\" != \"\" ]]"
      - uses: ./
        with:
          prebuilt-version: 0.6.0
      - run: "[[ \"$(cargo prebuilt --version)\" == \"Version: 0.6.0\" ]]"
  test-linux-tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          pkgs: just,rtx-cli@1.34.0,bacon@2.11.0
      - run: just --version
      - run: which just
      - run: rtx --version
      - run: "[[ \"$(bacon --version)\" == \"bacon 2.11.0\" ]]"
  test-macos-tools:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          pkgs: just,rtx-cli@1.34.0,bacon@2.11.0
      - run: just --version
      - run: which just
      - run: rtx --version
      - run: "[[ \"$(bacon --version)\" == \"bacon 2.11.0\" ]]"
  test-macos-14-tools:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          pkgs: just,rtx-cli@1.34.0,bacon@2.11.0
      - run: just --version
      - run: which just
      - run: rtx --version
      - run: "[[ \"$(bacon --version)\" == \"bacon 2.11.0\" ]]"
  test-windows-tools:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          pkgs: just,bacon@2.11.0
      - shell: bash
        run: just --version
      - run: where.exe just
      - shell: bash
        run: "[[ \"$(bacon --version)\" == \"bacon 2.11.0\" ]]"
  test-dup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          pkgs: just@1.14.0
      - run: "[[ \"$(just --version)\" == \"just 1.14.0\" ]]"
      - uses: ./
        with:
          out: false
          pkgs: just@1.14.0
      - run: "[[ \"$(just --version)\" == \"just 1.14.0\" ]]"
      - run: which just
  test-minisign:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-13
          - os: macos-14
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          prebuilt-verify: minisign
          pkgs: just@1.14.0
  test-target:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          pkgs: just,rtx-cli@1.34.0,bacon@2.11.0
          target: aarch64-unknown-linux-musl
      - run: which just
  test-next:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-13
          - os: macos-14
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          prebuilt-version: 0.7.0-dev.0
          prebuilt-verify: minisign
          pkgs: just,bat,cargo-asm,zoxide
