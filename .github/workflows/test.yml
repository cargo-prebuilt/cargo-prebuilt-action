name: Test

on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
      - run: cargo prebuilt just
      - run: just --version
  test-version: # make sure that the right version can be downloaded
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
      - run: '[[ "$(cargo prebuilt --version)" != "" ]]'
      - uses: ./
        with:
          prebuilt-version: 0.6.0
      - run: '[[ "$(cargo prebuilt --version)" == "Version: 0.6.0" ]]'
  test-linux-tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
        with:
          pkgs: just,rtx-cli@1.34.0,bacon@2.11.0
      - run: just --version
      - run: which just
      - run: rtx --version
      - run: '[[ "$(bacon --version)" == "bacon 2.11.0" ]]'
  test-macos-tools:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
        with:
          pkgs: just,rtx-cli@1.34.0,bacon@2.11.0
      - run: just --version
      - run: which just
      - run: rtx --version
      - run: '[[ "$(bacon --version)" == "bacon 2.11.0" ]]'
  test-windows-tools:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
        with:
          pkgs: just,bacon@2.11.0
      - shell: bash
        run: just --version
      - run: where.exe just
      - shell: bash
        run: '[[ "$(bacon --version)" == "bacon 2.11.0" ]]'
  test-dup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
        with:
          pkgs: just@1.14.0
      - run: '[[ "$(just --version)" == "just 1.14.0" ]]'
      - uses: ./
        with:
          out: false
          pkgs: just@1.14.0
      - run: '[[ "$(just --version)" == "just 1.14.0" ]]'
      - run: which just
  test-minisign:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
        with:
          prebuilt-verify: minisign
          pkgs: just@1.14.0
  test-target:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
        with:
          pkgs: just,rtx-cli@1.34.0,bacon@2.11.0
          target: aarch64-unknown-linux-musl
      - run: which just
  test-next:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./
        with:
          prebuilt-version: '0.7.4'
          prebuilt-verify: minisign
          pkgs: just,bat,cargo-asm,zoxide
